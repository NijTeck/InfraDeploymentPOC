# Step 1: Connect to Microsoft Graph
Write-Host "Connecting to Microsoft Graph..." -ForegroundColor Cyan
Connect-MgGraph -Scopes "Application.ReadWrite.All"

# Step 2: Define target applications
$appDisplayNames = @(
    "Icertis Contact Intelligence SSO - OAuth-dev",
    "Icertis Contact Intelligence SSO - OAuth-prod",
    "Icertis Contact Intelligence SSO - OAuth"
)

# Step 3: Initialize results collection
$credentials = @()

foreach ($appName in $appDisplayNames) {
    Write-Host "`nProcessing: $appName" -ForegroundColor Yellow
    
    # Step 4: Retrieve application details
    Write-Host "  - Searching for application..."
    $app = Get-MgApplication -Filter "displayName eq '$appName'"
    
    if ($app) {
        # Step 5: Generate new client secret
        Write-Host "  - Creating 12-month client secret..."
        $password = Add-MgApplicationPassword -ApplicationId $app.Id -PasswordCredential @{
            DisplayName = "AutoGenerated-12Months"
            EndDateTime = (Get-Date).AddMonths(12)
        }
        
        # Step 6: Get tenant information
        $tenantId = (Get-MgContext).TenantId
        
        # Step 7: Construct authentication endpoint
        $tokenEndpoint = "https://login.microsoftonline.com/$tenantId/oauth2/v2.0/token"
        
        # Step 8: Collect credentials
        $credentials += [PSCustomObject]@{
            ApplicationName = $appName
            ClientId        = $app.AppId
            ObjectId        = $app.Id
            ClientSecret    = $password.SecretText
            TenantId        = $tenantId
            TokenEndpoint   = $tokenEndpoint
        }
        
        Write-Host "  - Successfully processed $appName" -ForegroundColor Green
    } else {
        Write-Warning "  - Application '$appName' not found"
    }
}

# Step 9: Display results
Write-Host "`n=== Final Credentials Report ===`n" -ForegroundColor Magenta
$credentials | ForEach-Object {
    Write-Host "Application: $($_.ApplicationName)"
    Write-Host "  Client ID: $($_.ClientId)"
    Write-Host "  Object ID: $($_.ObjectId)"
    Write-Host "  Client Secret: $($_.ClientSecret)"
    Write-Host "  Tenant ID: $($_.TenantId)"
    Write-Host "  Token Endpoint: $($_.TokenEndpoint)"
    Write-Host "------------------------------"
}

# Step 10: Save to file (optional)
$credentials | ConvertTo-Json | Out-File "AzureAD_Credentials_$(Get-Date -Format 'yyyyMMdd').json"
Write-Host "`nCredentials saved to AzureAD_Credentials_$(Get-Date -Format 'yyyyMMdd').json" -ForegroundColor Cyan